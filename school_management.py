# -*- coding: utf-8 -*-
"""school_management.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jeHzeUdCDMI5ch5wD8Bjx4GinSdhSlUL
"""

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

df=pd.read_csv('/content/school_management1.csv')

def display():
 print(df)
 #cycle()

"""**line chart**"""

def line_chart():
  plt.plot(df['Teacher_name'],df['Salary'])
  plt.xlabel('Teachers')
  plt.ylabel('Salary')
  fig = plt.gcf()
  fig.set_size_inches(15, 5.5)
  #cycle()

def desc():
  df.describe()
  #cycle()

"""**bar**"""

def bargraph():
  plt.bar(df['Teacher_name'],df['Salary'])
  plt.xlabel('Teachers')
  plt.ylabel('Salary')
  fig = plt.gcf()
  fig.set_size_inches(15, 5.5)
  #cycle()

def histo():
  plt.hist(df['Salary'])
  #cycle()



"""**Adding a column**"""

def adding_col():
  col_name=input("Enter the name of the column you need to add:")
  l1=[]
  for row,row_ser in df.iterrows():
    teach=row_ser['Teacher_name']
    data_=input("Enter the column data for {}:".format(teach))
    l1.append(data_)
  df[col_name]=l1
  #cycle()

""" **Deleting acolumn**"""



def delete_col():
  print(df)
  del_col=input("Enter the name of the column to be deleted:")
  df.drop(del_col, axis=1, inplace=True)
  print(df)
  #cycle()



"""**List of teachers**"""

def list_ofteacher():
  print("Name of teachers:",df['Teacher_name'].tolist())
  #cycle()

"""**Teacher with max Salary**"""

def max_salary_():
   name_teach=''
   max_sal=df['Salary'].max()
   for row,row_ser in df.iterrows():
     field=row_ser['Salary']
     if field==max_sal:
       name_teach=row_ser['Teacher_name']
   print("Teacher with maximum salary:",name_teach)
   #cycle()

"""**Teacher with min Salary**"""

def min_salary_():
   name_teach=''
   min_sal=df['Salary'].min()
   for row,row_ser in df.iterrows():
     field=row_ser['Salary']
     if field==min_sal:
       name_teach=row_ser['Teacher_name']
   print("Teacher with minimum salary:",name_teach)
   #cycle()

"""**Details of a specific teacher**"""

def show_data():
  name=input("Enter the name of the teacher whose details you want to see:")
  for row,row_ser in df.iterrows():
    if row_ser['Teacher_name']==name:
      print(row_ser)
  life=int(input("Enter 0 to end the program or 1 to coninue"))
  #cycle()



def menu():
   print("Enter 1 to Display data")
   print("Enter 2 to print line chart teacher vs salary")
   print("Enter 3 to descibe and show stastics")
   print("Enter 4 to print bar chart teacher vs salary")
   print("Enter 5 to display the teacher with maximum salary")
   print("Enter 6 to display the teacher with minimum salary")
   print("Enter 7 to display the data of any specific teacher")
   print("Enter 8 to Add a column")
   print("Enter 9 to delete the column")
   print("Enter 11 to print list of teachers")
   print("Enter 12 to show histogram")
   ch=int(input("Enter the choice:-"))
   if ch==1:
     display()
   elif ch==2:
     line_chart()
   elif ch==3:
     df.describe()
   elif ch==4:
     bargraph()
   elif ch==5:
     max_salary_()
   elif ch==6:
     min_salary_()
   elif ch==7:
     show_data()
   elif ch==8:
     adding_col()
   elif ch==9:
     delete_col()
   elif ch==10:
     scats()
   elif ch==11:
     list_ofteacher()
   elif ch==12:
     histo()

menu()

def cycle():
  if life==0:
    print("ok you exited from program")
  elif life==1:
    menu()



df

